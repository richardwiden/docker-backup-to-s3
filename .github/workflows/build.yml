name: CI-dev-pipeline
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ] # to change to develop
jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: lucasalt/act_base:latest
    steps:
      - uses: actions/checkout@v2
        with:
          path: "docker-backup-to-s3"
      - name: RunOne
        run: |
          echo Hello, world!
      - name: Build docker
        env:
          AWS_DEFAULT_REGION: eu-central-1
          AWS_ACCESS_KEY_ID: myawskey
          AWS_SECRET_ACCESS_KEY: myawssecret
          S3_PATH: s3://my-bucket/backup
          S3_ENDPOINT: http://s3:9000
          AES_PASSPHRASE: secret
        run: |
          echo ---Destroying crap---
          docker kill s3 || true
          docker network rm local|| true
          docker volume rm data || true
          echo ---Building and starting up docker---
          docker network create local

          docker volume create data;
          docker run   --name helper -v data:/data busybox
          echo "my test data" > test_input
          docker cp test_input helper:/data
          docker rm helper

          docker build --tag docker-backup-to-s3:latest  docker-backup-to-s3
          docker run -d  --rm --name s3 --network local -p 9000:9000 -e USER=myawskey -e PASSWORD=myawssecret altmannmarcelo/minio:latest
          docker run --rm -it --network local -e AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY amazon/aws-cli --endpoint-url http://s3:9000 s3 mb s3://my-bucket
          docker run  --rm  --name backup --network local  -v data:/data    \
            -e AWS_DEFAULT_REGION -e AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY \
          	-e S3_PATH -e S3_ENDPOINT -e AES_PASSPHRASE \
             docker-backup-to-s3:latest backup-once
          docker volume rm data
          docker volume create data
          docker run  --rm  --name backup --network local  -v data:/data    \
          -e AWS_DEFAULT_REGION -e AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY \
          -e S3_PATH -e S3_ENDPOINT -e AES_PASSPHRASE \
          docker-backup-to-s3:latest restore

          docker run -d --rm --name output -v data:/data busybox true
          docker cp output:/data test_output

          echo ---Containers up---
          docker kill s3 || true
          docker network rm local || true